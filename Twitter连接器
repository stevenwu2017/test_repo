Twitter Streaming API 提供了,Twitter提供的对Twitter流的访问。Flink Streaming自带一个内置TwitterSource类, 来建立一个到这个Twitter流的连接。若要使用此连接器，请将下列依赖项添加到项目中：
<dependency>
  <groupId>org.apache.flink</groupId>
  <artifactId>flink-connector-twitter_2.10</artifactId>
  <version>1.2.0</version>
</dependency>
注意，流连接器目前不是二进制发布包的一部分。在集群中执行时,请看链接，这里。
认证
为了连接到Twitter流，用户必须在应用程序中注册他们，并获得必要的信息进行身份验证。该过程如下所述。
获取认证信息
首先，需要一个Twitter帐户。免费注册在twitter.com/signup 或在Twitter的应用管理里登录和登记程序通过点击“创建新的应用程序”按钮。填写一份关于你的计划的表格,并接受条款和条件。在选择这个应用之后，API密钥和API的机密（在TwitterSource里分别称为twitter-source.consumerKey和twitter-source.consumerSecret）位于“API密钥”选项卡。必要的OAuth访问令牌的数据（TwitterSource包含 twitter-source.token和twitter-source.tokenSecret）可以产生和获得,在“密钥和访问令牌”选项卡。记住把这些信息保密，不要把它们推送到公共仓库。
用法
对比其他连接器，该TwitterSource不依赖于额外的服务。例如下面的代码应该运行优雅：
Java
Properties props = new Properties();
props.setProperty(TwitterSource.CONSUMER_KEY, "");
props.setProperty(TwitterSource.CONSUMER_SECRET, "");
props.setProperty(TwitterSource.TOKEN, "");
props.setProperty(TwitterSource.TOKEN_SECRET, "");
DataStream<String> streamSource = env.addSource(new TwitterSource(props));

Scala
val props = new Properties();
props.setProperty(TwitterSource.CONSUMER_KEY, "");
props.setProperty(TwitterSource.CONSUMER_SECRET, "");
props.setProperty(TwitterSource.TOKEN, "");
props.setProperty(TwitterSource.TOKEN_SECRET, "");
DataStream<String> streamSource = env.addSource(new TwitterSource(props));

TwitterSource发射字符串,包含一个JSON对象，代表一个(Tweet)鸣叫?。
TwitterExample类在flink-examples-streaming包里,展示了一个如何使用TwitterSource完整的例子。
默认情况下，该TwitterSource采用StatusesSampleEndpoint。这个端点返回一个随机样本的(Tweets)鸣叫?。有一个TwitterSource.EndpointInitializer接口,允许用户提供自定义的终点。
